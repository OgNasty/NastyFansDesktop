<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>*MEMBERS / NON-MEMBERS*
•NastyFans is composed of thirty thousand seats
•a account is a member of and has membership in NastyFans if at least one seat is owned
•non-member accounts are automatically closed after thirty days
•a non-member account will stay open if a purchase order is open thirty days after creating the account

*MEMBERSHIP RIGHTS*
•a member has a right to vote in NastyFans polls within thirty days of the poll begin
•a member has a right to sell a seat on the NastyFans auction for at least 0.00000001 BTC

*AUCTION PURCHASE ORDERS*
•a non-member can only purchase one NastyFans seat
•a seat is transferred to a new owner after six Bitcoin transaction confirmations for the payment
•purchase orders are automatically cancelled if payment is not received within seven blocks of the Bitcoin block chain
•allowing purchase orders to automatically cancel is considered a abuse of NastyFans and may result in account termination

*MEMBERSHIP PROBATION / SUSPENSION / TERMINATION*

*PROBATION*
•membership is put on probation if the member does not sign in within ninety days
•donations to seats for a membership on probation will be held in a temporary NastyFans account
•after a sign in a membership on probation will return to normal status and any held donations will be sent to the member

*SUSPENSION*
•membership is put on suspension if a membership is on probation for ninety days
•a membership on suspension does not have voting rights and the acceptance of NastyFans donations is disabled
•any held donations for that member will be distributed to NastyFans accepting donations
•a member with membership on suspension still owns NastyFans seats
•after a sign in a membership on suspension will return to normal status (NastyFans donations are not automatically re-enabled)

*TERMINATION*
•membership is terminated and the member account is closed if a membership is on suspension for ninety days
•a poll is used to determine what happens to the membership seats from the terminated account

*NASTYFANS FEES / DONATION DISTRIBUTION*
•all fees added by NastyFans are used only to pay transaction fees within the Bitcoin network
•twenty-five percent of all donations to NastyFans are sent to NASTY MINING to use to improve NASTY MINING
•seventy-five percent of all donations to NastyFans are distributed equally to the membership seats accepting donations using the formula: seat donation truncated at 0.00000001 BTC = ( ( NastyFans donation x 0.75 ) - Bitcoin transaction fees ) / number of seats accepting donations
•any NastyFans donation remainders are added to the next NastyFans donation

*POLLS / VOTING*
•polls can occur to: ◦gather member opinions
◦decide on fundraisers for NASTY MINING
◦change NastyFans policy
◦decide what to do with unowned seats

•a vote is multiplied by the number of seats owned by that member
•all polls include choices that mean: "no action" and "abstain"
•any members that do not vote within thirty days of a poll begin will automatically vote for the "abstain" choice
•for a poll choice to result in a action there must be at least a three-fourths majority for that poll choice (seats owned by a membership in suspension have no voting rights and are not counted)

*PRESIDENCY*
•the president is responsible for enforcing this policy and keeping NastyFans website online and working
•the president chooses poll contents and starts polls
•the president may terminate any account if the president determines that the member or non-member is abusing NastyFans
•the current president of NastyFans is nonnakip with pgp fingerprint 5ED0 BD48 84D2 CA27 0E64 72D5 C01B 4F70 668F F5EB

*MINTED SEATS*
•a set of one or more existing NastyFans seats can be minted to a physical coin by NASTY MINING
•each minted seat set is assigned a permanent unique Bitcoin address to receive NastyFans donations
•minted seats are immune from probation/suspension/termination policies
•the president may suspend voting rights for a minted seat if a dispute about its ownership arises</value>
  </data>
</root>